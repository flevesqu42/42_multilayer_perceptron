{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48],"program":"/sgoinfre/goinfre/Perso/flevesqu/rust/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","memchr","/sgoinfre/goinfre/Perso/flevesqu/rust/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"libc\"","-C","metadata=2980fd345c331628","-C","extra-filename=-2980fd345c331628","--out-dir","/Users/flevesqu/projects/github/42_multilayer_perceptron/target/rls/debug/deps","-L","dependency=/Users/flevesqu/projects/github/42_multilayer_perceptron/target/rls/debug/deps","--extern","libc=/Users/flevesqu/projects/github/42_multilayer_perceptron/target/rls/debug/deps/liblibc-22720ecfe5c9cb74.rmeta","--cap-lints","allow","--cfg","memchr_runtime_simd","--cfg","memchr_runtime_sse2","--cfg","memchr_runtime_sse42","--cfg","memchr_runtime_avx","--cfg","memchr_libc","--error-format=json","--sysroot","/sgoinfre/goinfre/Perso/flevesqu/rust//toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,102,108,101,118,101,115,113,117,47,112,114,111,106,101,99,116,115,47,103,105,116,104,117,98,47,52,50,95,109,117,108,116,105,108,97,121,101,114,95,112,101,114,99,101,112,116,114,111,110,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,109,101,109,99,104,114,45,50,57,56,48,102,100,51,52,53,99,51,51,49,54,50,56,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"memchr","disambiguator":[709730996651933565,5542046285273970576]},"crate_root":"/sgoinfre/goinfre/Perso/flevesqu/rust/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src","external_crates":[{"file_name":"/sgoinfre/goinfre/Perso/flevesqu/rust/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6147414643216591941,16038515938879704571]}},{"file_name":"/sgoinfre/goinfre/Perso/flevesqu/rust/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3393136130924908413,5343704927370780519]}},{"file_name":"/sgoinfre/goinfre/Perso/flevesqu/rust/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17733589389356987489,5507014771282040411]}},{"file_name":"/sgoinfre/goinfre/Perso/flevesqu/rust/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/c.rs","num":4,"id":{"name":"libc","disambiguator":[5017964117766627902,10033914069425638766]}}],"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":8927,"line_start":1,"line_end":312,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1630,"byte_end":1636,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"alias_span":null,"name":"Memchr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1638,"byte_end":1645,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"alias_span":null,"name":"Memchr2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1647,"byte_end":1654,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"alias_span":null,"name":"Memchr3","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":8927,"line_start":1,"line_end":312,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/sgoinfre/goinfre/Perso/flevesqu/rust/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":18},{"krate":0,"index":32},{"krate":0,"index":80},{"krate":0,"index":154},{"krate":0,"index":168},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":272}],"decl_id":null,"docs":"The `memchr` crate provides heavily optimized routines for searching bytes.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1126,"byte_end":1132,"line_start":23,"line_end":23,"column_start":39,"column_end":45}},{"value":"deny(missing_docs)","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1136,"byte_end":1158,"line_start":25,"line_end":25,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":22940,"byte_end":22946,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"Memchr","qualname":"::iter::Memchr","value":"Memchr {  }","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41}],"decl_id":null,"docs":" An iterator for `memchr`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":23197,"byte_end":23200,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr<'a>>::new","value":"fn (needle: u8, haystack: &[u8]) -> Memchr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":23176,"byte_end":23185,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":23890,"byte_end":23897,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"Memchr2","qualname":"::iter::Memchr2","value":"Memchr2 {  }","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57}],"decl_id":null,"docs":" An iterator for `memchr2`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":24167,"byte_end":24170,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr2<'a>>::new","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Memchr2","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":24146,"byte_end":24155,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":24976,"byte_end":24983,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"Memchr3","qualname":"::iter::Memchr3","value":"Memchr3 {  }","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75}],"decl_id":null,"docs":" An iterator for `memchr3`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":25264,"byte_end":25267,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr3<'a>>::new","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Memchr3","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Memchr3` that's initialized to zero with a haystack\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":25243,"byte_end":25252,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":240},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1982,"byte_end":1993,"line_start":58,"line_end":58,"column_start":8,"column_end":19},"name":"memchr_iter","qualname":"::memchr_iter","value":"fn (needle: u8, haystack: &[u8]) -> Memchr","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needle in a haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1965,"byte_end":1974,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":242},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2156,"byte_end":2168,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"memchr2_iter","qualname":"::memchr2_iter","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Memchr2","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needles in a haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2139,"byte_end":2148,"line_start":63,"line_end":63,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":244},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2372,"byte_end":2384,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"memchr3_iter","qualname":"::memchr3_iter","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Memchr3","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needles in a haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2355,"byte_end":2364,"line_start":73,"line_end":73,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":246},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2625,"byte_end":2637,"line_start":85,"line_end":85,"column_start":8,"column_end":20},"name":"memrchr_iter","qualname":"::memrchr_iter","value":"fn (needle: u8, haystack: &[u8]) -> Rev<Memchr>","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needle in a haystack, in reverse.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2608,"byte_end":2617,"line_start":84,"line_end":84,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":248},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2823,"byte_end":2836,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"memrchr2_iter","qualname":"::memrchr2_iter","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Rev<Memchr2>","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needles in a haystack, in reverse.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2806,"byte_end":2815,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":250},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3063,"byte_end":3076,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"memrchr3_iter","qualname":"::memrchr3_iter","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Rev<Memchr3>","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needles in a haystack, in reverse.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3046,"byte_end":3055,"line_start":100,"line_end":100,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3903,"byte_end":3909,"line_start":131,"line_end":131,"column_start":8,"column_end":14},"name":"memchr","qualname":"::memchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Search for the first occurrence of a byte in a slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3886,"byte_end":3895,"line_start":130,"line_end":130,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":256},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4766,"byte_end":4773,"line_start":165,"line_end":165,"column_start":8,"column_end":15},"name":"memchr2","qualname":"::memchr2","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4749,"byte_end":4758,"line_start":164,"line_end":164,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":260},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5415,"byte_end":5422,"line_start":187,"line_end":187,"column_start":8,"column_end":15},"name":"memchr3","qualname":"::memchr3","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5398,"byte_end":5407,"line_start":186,"line_end":186,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":264},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6720,"byte_end":6727,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"memrchr","qualname":"::memrchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Search for the last occurrence of a byte in a slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6703,"byte_end":6712,"line_start":232,"line_end":232,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":268},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7640,"byte_end":7648,"line_start":267,"line_end":267,"column_start":8,"column_end":16},"name":"memrchr2","qualname":"::memrchr2","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memrchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7623,"byte_end":7632,"line_start":266,"line_end":266,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8293,"byte_end":8301,"line_start":289,"line_end":289,"column_start":8,"column_end":16},"name":"memrchr3","qualname":"::memrchr3","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memrchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8276,"byte_end":8285,"line_start":288,"line_end":288,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":23079,"byte_end":23085,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":23385,"byte_end":23391,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":23693,"byte_end":23699,"line_start":68,"line_end":68,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":24048,"byte_end":24055,"line_start":85,"line_end":85,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":24403,"byte_end":24410,"line_start":98,"line_end":98,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":24728,"byte_end":24735,"line_start":112,"line_end":112,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":25151,"byte_end":25158,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":25582,"byte_end":25589,"line_start":152,"line_end":152,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":25955,"byte_end":25962,"line_start":169,"line_end":169,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":23079,"byte_end":23085,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":23385,"byte_end":23391,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":100},"to":{"krate":1,"index":3908}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":23693,"byte_end":23699,"line_start":68,"line_end":68,"column_start":34,"column_end":40},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":100},"to":{"krate":1,"index":4344}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":24048,"byte_end":24055,"line_start":85,"line_end":85,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":24403,"byte_end":24410,"line_start":98,"line_end":98,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":118},"to":{"krate":1,"index":3908}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":24728,"byte_end":24735,"line_start":112,"line_end":112,"column_start":34,"column_end":41},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":118},"to":{"krate":1,"index":4344}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":25151,"byte_end":25158,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":25582,"byte_end":25589,"line_start":152,"line_end":152,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":136},"to":{"krate":1,"index":3908}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,102,108,101,118,101,115,113,117,47,114,117,115,116,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,50,46,48,47,115,114,99,47,105,116,101,114,46,114,115],"byte_start":25955,"byte_end":25962,"line_start":169,"line_end":169,"column_start":34,"column_end":41},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":136},"to":{"krate":1,"index":4344}}]}